itemUIClone.transform.SetParent(gridRoot);
//Reset đưa về vị trí 0 0 0  và scale về 111
itemUIClone.transform.localPosition = Vector3.zero;
itemUIClone.transform.localScale = Vector3.one;
itemUIClone.Update(item, i);

//add sự kiện vào button
if(itemUIClone.btn){
	itemUIClone.btn.OnClick.RemoveAllListeners();
	itemUIClone.btn.OnClick.AddListener( () => ItemEnvet(item, i))
}

//Viết hàm clearChilds() vì mỗi lần bấm vào shop nó lại tạo ra các item mới


public void ClearChilds(){
	if(!gridRoot || gridRoot.childCount <= 0 ) return;
	for (int = 0; i < gridRoot.childCount; i++){
	var child = gridRoot.GetChild(i);
	if(child){
	Destroy(child.gameObject);
}
}
}

//Viết ClearChilds() vào hàm UpdateUI trước đoạn return nếu rông 


///Viết hàm khi bấm vào mua item
void ItemEvent(ShopItem item, int shopItemId){
	if(item == null) return;
bool isUnlocked = Pref.GetBool("player_"+ shopItemId);
if(isUnlocked){
	if(shopItemId == Pref.CurPlayerId) return;
	Pref.CurPlayerId = shopItemId;
	UpdateUI();
}else {
	if(Pref.Coins >=0) {
	Pref.Coins -= item.price;
	Pref.SetBool("player_" + shopItemId, true );
	Pref.CurPlayerId = shopItemId;
}else{
	Debug.Log("Không đủ tiền")
}
}

}


//Tạo script GameManager

//Trong UI Tạo script mới

public class GameManager : Singleton<GameManager>

